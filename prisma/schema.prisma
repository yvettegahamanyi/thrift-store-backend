// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid()) // Unique identifier for the user
  firstName   String   // User's first name
  lastName    String   // User's last name
  email       String   @unique // User's email address
  password    String   // Excluded in DTOs, but stored in DB
  phoneNumber String?  // User's phone number (optional)
  address     String?  // User's address (optional)
  status      UserStatus @default(ACTIVE) // User's status
  role        UserRole @default(CUSTOMER) // User's role
  isActive    Boolean  @default(true) // Whether the user account is active
  donations   Donation[] // User's donations
  createdAt   DateTime @default(now()) // When the user was created
  updatedAt   DateTime @updatedAt // When the user was last updated

    @@map("users")
}

enum UserRole {
  CUSTOMER
  ADMIN
  DONOR
}

enum UserStatus {
  ACTIVE
  INACTIVE
}


model Donation {
  id           String          @id @default(uuid())
  title        String
  description  String
  status       DonationStatus  @default(PENDING)
  pickupAddress String?       
  pickupDate   DateTime?       
  donorId      String
  donor        User            @relation(fields: [donorId], references: [id])
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt

  @@map("donations")
}

enum DonationStatus {
  PENDING
  APPROVED
  REJECTED
}